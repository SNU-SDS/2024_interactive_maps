---
title: "echats4r 지도"
author: Sang-Il Lee
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
lightbox: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
editor_options: 
  chunk_output_type: console
---

## 개요

`echarts4r` 패키지를 이용하여 지도를 제작한다. 다음의 웹사이트가 유용하다.

-   [echarts4r 패키지](https://echarts4r.john-coene.com/)

-   [echarts4r.maps 패키지](https://echarts4r-maps.john-coene.com/)

-   [echarts4r.assets 패키지](https://echarts4r-assets.john-coene.com/)

-   [Apache ECharts 홈페이지](https://echarts.apache.org/en/index.html)

## 파이 차트 지도 제작

### 예제

`echarts4r` 패키지의 예제는 존재하지 않는다. 따라서 Apache ECharts의 Example에 있는 [Pie Charts on GEO Map](https://echarts.apache.org/examples/en/editor.html?c=map-usa-pie)를 참조한다. 자바스크립트 코드가 존재하기 때문에 이것을 `echarts4r` 패키지의 문법으로 전환하는 것이 관건이다.

### 지도 제작

#### 필수 패키지

```{r}
library(tidyverse)
library(sf)
library(echarts4r)
library(jsonlite)
```

#### 미국 예제 데이터(geojson 포맷) 불러오기

```{r}
json <- jsonlite::read_json("https://echarts.apache.org/examples/data/asset/geo/USA.json")
```

#### geojson 지도를 등록하기

```{r}
e_charts() |> 
  e_map_register("USA", json) |> 
  e_geo(
    map = "USA", 
    roam = TRUE,
    itemStyle = list(borderColor = "red")
  ) |> 
  e_pie(
    coord_sys = "geo" # 작동하지 않는 듯
  )
```

```{r}
# Load geoJSON data
json <- read_json("https://echarts.apache.org/examples/data/asset/geo/USA.json")

# Sample data (replace with your actual data)
states_data <- data.frame(
  state = c("Alabama", "Alaska", "Arizona"),
  A = c(30, 40, 20),
  B = c(20, 30, 40),
  C = c(10, 10, 30),
  D = c(40, 20, 10)
)

# Prepare pie chart data
states_data$pie_data <- apply(states_data[, c("A", "B", "C", "D")], 1, function(x) {
  list(list(name = "A", value = x[1]), list(name = "B", value = x[2]), 
       list(name = "C", value = x[3]), list(name = "D", value = x[4]))
})

# Create map with pie charts
e_charts() |>
  e_map_register("USA", json) |>
  e_geo(
    map = "USA", 
    roam = TRUE,
    itemStyle = list(borderColor = "red")
  ) |>
  e_pie(states_data$pie_data) |>
  e_tooltip(trigger = "item")


```

## 서울시 구별 남녀 인구수

### 데이터 다운로드

```{r}
#| eval: false
library(kosis)
library(tidyverse)

kosis.setKey('MTc5NDRlYzQzZWY0ZjhkYTQxZmJmZDM0MDBhNGNiMjQ=')

your_url <- "https://kosis.kr/openapi/Param/statisticsParameterData.do?method=getList&apiKey=MTc5NDRlYzQzZWY0ZjhkYTQxZmJmZDM0MDBhNGNiMjQ=&itmId=T100+T110+T120+T130+T131+T132+T140+T141+T142+T200+T210+T220+T230+T310+T311+T312+T313+T314+T315+T320+&objL1=00+04+05+03+11+11010+11020+11030+11040+11050+11060+11070+11080+11090+11100+11110+11120+11130+11140+11150+11160+11170+11180+11190+11200+11210+11220+11230+11240+11250+21+21004+21005+21003+21010+21020+21030+21040+21050+21060+21070+21080+21090+21100+21110+21120+21130+21140+21150+21510+22+22004+22005+22003+22010+22020+22030+22040+22050+22060+22070+22510+22520+23+23004+23005+23003+23010+23020+23030+23040+23050+23060+23070+23080+23090+23510+23520+24+24010+24020+24030+24040+24050+25+25010+25020+25030+25040+25050+26+26004+26005+26003+26010+26020+26030+26040+26510+29+29004+29005+29003+29010+31+31004+31005+31003+31010+31011+31012+31013+31014+31020+31021+31022+31023+31030+31040+31041+31042+31050+31051+31052+31053+31060+31070+31080+31090+31091+31092+31100+31101+31103+31104+31110+31120+31130+31140+31150+31160+31170+31180+31190+31191+31192+31193+31200+31210+31220+31230+31240+31250+31260+31270+31280+31550+31570+31580+32+32004+32005+32003+32010+32020+32030+32040+32050+32060+32070+32510+32520+32530+32540+32550+32560+32570+32580+32590+32600+32610+33+33004+33005+33003+33020+33030+33040+33041+33042+33043+33044+33520+33530+33540+33550+33560+33570+33580+33590+34+34004+34005+34003+34010+34011+34012+34020+34030+34040+34050+34060+34070+34080+34510+34530+34540+34550+34560+34570+34580+35+35004+35005+35003+35010+35011+35012+35020+35030+35040+35050+35060+35510+35520+35530+35540+35550+35560+35570+35580+36+36004+36005+36003+36010+36020+36030+36040+36060+36510+36520+36530+36550+36560+36570+36580+36590+36600+36610+36620+36630+36640+36650+36660+36670+36680+37+37004+37005+37003+37010+37011+37012+37020+37030+37040+37050+37060+37070+37080+37090+37100+37510+37520+37530+37540+37550+37560+37570+37580+37590+37600+37610+37620+37630+38+38004+38005+38003+38030+38050+38060+38070+38080+38090+38100+38110+38111+38112+38113+38114+38115+38510+38520+38530+38540+38550+38560+38570+38580+38590+38600+39+39004+39005+39003+39010+39020+&objL2=&objL3=&objL4=&objL5=&objL6=&objL7=&objL8=&format=json&jsonVD=Y&prdSe=Y&startPrdDe=2023&endPrdDe=2023&outputFields=ORG_ID+TBL_ID+TBL_NM+OBJ_ID+OBJ_NM+OBJ_NM_ENG+NM+NM_ENG+ITM_ID+ITM_NM+ITM_NM_ENG+UNIT_NM+UNIT_NM_ENG+PRD_SE+PRD_DE+LST_CHN_DE+&orgId=101&tblId=DT_1IN1502"
data_api <- getStatDataFromURL(url = your_url)
data_api |> 
  slice_head(n = 5)
data <- data_api |> 
  select(C1, C1_NM, ITM_ID, ITM_NM, DT) |> 
  filter(
    ITM_ID %in% c("T100", "T110", "T120")
  ) |> 
  mutate(
    across(c(C1, DT), as.numeric)
  ) |> 
  pivot_wider(
    id_cols = c(C1, C1_NM),
    names_from = ITM_ID, 
    values_from = DT
  ) |> 
  rename(
    total = T100, 
    male = T110,
    female = T120
  )
write_rds(data, "data/census_2023_gen.rds")
```

```{r}
data_2023 <- read_rds("data/census_2023_gen.rds")
```

```{r}
#| eval: false
seoul_gu <- st_read("data/SEOUL_GU_2022_4Q.shp")
seoul_gu_4326 <- seoul_gu |> 
  select(SGG1_NM) |> 
  rename(name = SGG1_NM) |> 
  st_transform(crs = 4326)
st_write(seoul_gu_4326, "data/seoul_gu_4326.geojson", driver = "GeoJSON", delete_dsn = TRUE)
```

```{r}
seoul_gu <- st_read("data/SEOUL_GU_2022_4Q.shp")
seoul_gu <- seoul_gu |> 
  left_join(
    data_2023, join_by(SGG1_CD == C1)
  )
```

```{r}
seoul_gu.geojson <- jsonlite::read_json("data/seoul_gu_4326.geojson")

e_charts() |> 
  e_map_register("seoul_gu", seoul_gu.geojson) |> 
  e_geo(
    map = "seoul_gu", 
    roam = TRUE,
    itemStyle = list(borderColor = "red")
  ) |> 
  e_pie(
    name = "Gender Distribution",
    radius = "50%",
    series = list(
      list(
        name = "Male",
        type = "pie",
        data = lapply(1:nrow(seoul_gu), function(i) list(name = seoul_gu.geojson$name[i], value = seoul_gu$male[i]))
      ),
      list(
        name = "Female",
        type = "pie",
        data = lapply(1:nrow(seoul_gu), function(i) list(name = seoul_gu.geojson$name[i], value = seoul_gu$female[i]))
      )
    )
  ) |> 
  e_tooltip(trigger = "item")
```
